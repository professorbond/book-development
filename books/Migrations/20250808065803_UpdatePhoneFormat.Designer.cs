// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBlazorApp.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace books.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250808065803_UpdatePhoneFormat")]
    partial class UpdatePhoneFormat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyBlazorApp.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Караганда"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Астана"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Алмата"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Темиртау"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Шымкент"
                        });
                });

            modelBuilder.Entity("MyBlazorApp.Data.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            FirstName = "Иван",
                            LastName = "Иванов",
                            MiddleName = "Иванович",
                            Note = "Сидел 2 года"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            FirstName = "Петр",
                            LastName = "Петров",
                            MiddleName = "Петрович",
                            Note = "ну просто Петя"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            FirstName = "Сергей",
                            LastName = "Сергеев",
                            MiddleName = "Сергеевич",
                            Note = "четкий пацан"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            FirstName = "Дмитрий",
                            LastName = "Дмитриев",
                            MiddleName = "Дмитриевич",
                            Note = "спортсмен"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 5,
                            FirstName = "Андрей",
                            LastName = "Андреев",
                            MiddleName = "Андреевич",
                            Note = "в законе"
                        });
                });

            modelBuilder.Entity("MyBlazorApp.Data.Entities.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsBankLinked")
                        .HasColumnType("boolean");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsBankLinked = true,
                            PersonId = 1,
                            PhoneNumber = "+7 (797) 897 2679",
                            PhoneType = "сотовый"
                        },
                        new
                        {
                            Id = 2,
                            IsBankLinked = false,
                            PersonId = 2,
                            PhoneNumber = "+7 (777) 777 7777",
                            PhoneType = "сотовый"
                        },
                        new
                        {
                            Id = 3,
                            IsBankLinked = true,
                            PersonId = 3,
                            PhoneNumber = "+7 (776) 567 2456",
                            PhoneType = "сотовый"
                        },
                        new
                        {
                            Id = 4,
                            IsBankLinked = false,
                            PersonId = 4,
                            PhoneNumber = "+7 (777) 897 6655",
                            PhoneType = "сотовый"
                        },
                        new
                        {
                            Id = 5,
                            IsBankLinked = true,
                            PersonId = 5,
                            PhoneNumber = "+7 (777) 095 0095",
                            PhoneType = "сотовый"
                        },
                        new
                        {
                            Id = 6,
                            IsBankLinked = false,
                            PersonId = 1,
                            PhoneNumber = "+7 (700) 111 2233",
                            PhoneType = "домашний"
                        },
                        new
                        {
                            Id = 7,
                            IsBankLinked = true,
                            PersonId = 2,
                            PhoneNumber = "+7 (700) 555 6677",
                            PhoneType = "рабочий"
                        });
                });

            modelBuilder.Entity("MyBlazorApp.Data.Entities.Person", b =>
                {
                    b.HasOne("MyBlazorApp.Data.Entities.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("MyBlazorApp.Data.Entities.Phone", b =>
                {
                    b.HasOne("MyBlazorApp.Data.Entities.Person", "Person")
                        .WithMany("Phones")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MyBlazorApp.Data.Entities.City", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("MyBlazorApp.Data.Entities.Person", b =>
                {
                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
